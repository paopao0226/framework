<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.csu.mypetstore.persistence.AccountMapper">
    <!--加入获取密码的语句-->
    <select id="getAccountByUsername" parameterType="string" resultType="Account">
        SELECT
          SIGNON.USERNAME,
          SIGNON.PASSWORD,
          ACCOUNT.EMAIL,
          ACCOUNT.FIRSTNAME,
          ACCOUNT.LASTNAME,
          ACCOUNT.STATUS,
          ACCOUNT.ADDR1 AS address1,
          ACCOUNT.ADDR2 AS address2,
          ACCOUNT.CITY,
          ACCOUNT.STATE,
          ACCOUNT.ZIP,
          ACCOUNT.COUNTRY,
          ACCOUNT.PHONE,
          PROFILE.LANGPREF AS languagePreference,
          PROFILE.FAVCATEGORY AS favouriteCategoryId,
          PROFILE.MYLISTOPT AS listOption,
          PROFILE.BANNEROPT AS bannerOption,
          BANNERDATA.BANNERNAME
        FROM ACCOUNT, PROFILE, SIGNON, BANNERDATA
        WHERE ACCOUNT.USERID = #{username}
            AND SIGNON.USERNAME = ACCOUNT.USERID
            AND PROFILE.USERID = ACCOUNT.USERID
            AND PROFILE.FAVCATEGORY = BANNERDATA.FAVCATEGORY
    </select>
    <select id="getAccountByUsernameAndPassword" parameterType="Account" resultType="Account">
        SELECT
            SIGNON.USERNAME,ACCOUNT.EMAIL,ACCOUNT.FIRSTNAME,ACCOUNT.LASTNAME,ACCOUNT.STATUS,ACCOUNT.ADDR1 AS address1,ACCOUNT.ADDR2 AS address2,ACCOUNT.CITY,ACCOUNT.STATE,ACCOUNT.ZIP,ACCOUNT.COUNTRY,ACCOUNT.PHONE,PROFILE.LANGPREF AS languagePreference,PROFILE.FAVCATEGORY AS favouriteCategoryId,PROFILE.MYLISTOPT AS listOption,PROFILE.BANNEROPT AS bannerOption,BANNERDATA.BANNERNAME
        FROM
            ACCOUNT, PROFILE, SIGNON, BANNERDATA
        WHERE
            ACCOUNT.USERID = #{username}
            AND SIGNON.PASSWORD = #{password}
            AND SIGNON.USERNAME = ACCOUNT.USERID
            AND PROFILE.USERID = ACCOUNT.USERID
            AND PROFILE.FAVCATEGORY = BANNERDATA.FAVCATEGORY
    </select>
    <insert id="insertAccount" parameterType="Account">
        INSERT INTO ACCOUNT
      (EMAIL, FIRSTNAME, LASTNAME, STATUS, ADDR1, ADDR2, CITY, STATE, ZIP, COUNTRY, PHONE, USERID)
        VALUES
      (#{email}, #{firstName}, #{lastName}, #{status}, #{address1},  #{address2,jdbcType=VARCHAR}, #{city}, #{state}, #{zip}, #{country}, #{phone}, #{username})
    </insert>
    <insert id="insertProfile" parameterType="Account">
        INSERT INTO PROFILE (LANGPREF, FAVCATEGORY, USERID)
        VALUES (#{languagePreference}, #{favouriteCategoryId}, #{username})
    </insert>
    <insert id="insertSignon" parameterType="Account">
        INSERT INTO SIGNON (PASSWORD,USERNAME)
        VALUES (#{password}, #{username})
    </insert>
    <insert id="insertRole" parameterType="Account">
        insert into role(username,role) values (#{username},#{role})
    </insert>
    <update id="updateAccount" parameterType="Account">
        UPDATE ACCOUNT SET
          EMAIL = #{email},
          FIRSTNAME = #{firstName},
          LASTNAME = #{lastName},
          STATUS = #{status},
          ADDR1 = #{address1},
          ADDR2 = #{address2,jdbcType=VARCHAR},
          CITY = #{city},
          STATE = #{state},
          ZIP = #{zip},
          COUNTRY = #{country},
          PHONE = #{phone}
        WHERE USERID = #{username}
    </update>
    <update id="updateProfile" parameterType="Account">
        UPDATE PROFILE SET
         LANGPREF = #{languagePreference},
         FAVCATEGORY = #{favouriteCategoryId}
        WHERE USERID = #{username}
    </update>
    <update id="updateRole" parameterType="Account">
        update Role set
        role = #{role}
        where username = #{username}
    </update>
    <update id="updateSignon" parameterType="Account">
        UPDATE SIGNON SET PASSWORD = #{password}
        WHERE USERNAME = #{username}
    </update>
    <select id="getAllAccount" resultType="Account">
        SELECT * FROM ACCOUNT
    </select>
    <select id="searchAccount" parameterType="string" resultType="Account">
        select *
        from account
        where userid like #{value} or email like #{value} or firstname like #{value}
            or lastname like #{value} or addr1 like #{value} or addr2 like #{value}
            or city like #{value} or country like #{value} or phone like #{value}
    </select>
    <select id="findRoleByUsername" parameterType="string" resultType="Role">
        select *
        from role
        where username = #{urname}
    </select>
    <delete id="deleteAccount" parameterType="string">
        delete from ACCOUNT
        where ACCOUNT.USERID = #{value}
    </delete>
    <delete id="deleteProfile" parameterType="string">
        delete from PROFILE
        where PROFILE.USERID = #{value}
    </delete>
    <delete id="deleteSignon" parameterType="string">
        delete from SIGNON
        where SIGNON.USERNAME = #{value}
    </delete>
    <delete id="deleteRole" parameterType="string">
        delete from ROLE
        where ROLE.USERNAME = #{value}
    </delete>
</mapper>