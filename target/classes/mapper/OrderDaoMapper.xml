<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.csu.mypetstore.persistence.OrderDao">
    <insert id="insertOrder" parameterType="Order" useGeneratedKeys="true" keyProperty="orderId">
        INSERT INTO ORDERS (userid,orderdate,shipaddr1,shipaddr2,shipcity,shipstate,shipzip,shipcountry,
            billaddr1,billaddr2,billcity,billstate,billzip,billcountry,courier,totalprice,billtofirstname,billtolastname,shiptofirstname,
            shiptolastname,creditcard,exprdate,cardtype,locale)
            VALUES(#{username},#{orderDate},#{shipAddress1},#{shipAddress2},#{shipCity},#{shipState},#{shipZip},#{shipCountry},
            #{billAddress1},#{billAddress1},#{billCity},#{billState},#{billZip},#{billCountry},
            #{courier},#{totalPrice},#{billToFirstName},#{billToLastName},#{shipToFirstName},#{shipToLastName},
            #{creditCard},#{expiryDate},#{cardType},#{locale})
    </insert>
    <select id="getOrdersByUsername" parameterType="string" resultType="Order">
        SELECT orders.orderid AS orderId, orderdate AS  orderDate, shipaddr1 AS shipAddress1, shipaddr2 AS shipAddress2, shipcity AS shipCity,
            billaddr1 AS billAddress1, billaddr2 AS billAddress2, billcity AS billCity, totalprice AS totalPrice, status
                FROM orders JOIN orderstatus on orders.orderid=orderstatus.orderid
                WHERE userid = #{userName}
    </select>
    <select id="getOrder" parameterType="int" resultType="Order">
        SELECT orderid AS orderId, orderdate AS  orderDate, shipaddr1 AS shipAddress1, shipaddr2 AS shipAddress2, shipcity AS shipCity,
            shipstate AS shipState, shipzip AS shipZip, shipcountry AS shipCountry, billaddr1 AS billAddress1, billaddr2 AS billAddress2,
            billcity AS billCity, billstate AS billState, billzip AS billZip, billcountry AS billCountry, courier AS courier, totalprice AS totalPrice,
            billtofirstname AS billToFirstName, billtolastname AS billToLastName, shiptofirstname AS shipToFirstName, shiptolastname AS shipToLastName,
            creditcard AS creditCard, exprdate AS expiryDate
                FROM ORDERS WHERE orderid = #{orderId}
    </select>
    
    <update id="updateOrder" parameterType="Order">
        UPDATE orders SET shipaddr1 = #{shipAddress1}, shipaddr2 = #{shipAddress2}, shipcity = #{shipCity},
            shipstate= #{shipState}, shipzip=  #{shipZip}, shipcountry = #{shipCountry}, billaddr1 = #{billAddress1},
            billaddr2 = #{billAddress2}, billtofirstname = #{billToFirstName}, billtolastname = #{billToLastName},
            shiptofirstname = #{shipToFirstName}, shiptolastname = #{shipToLastName}, billcity = #{billCity},
            billstate = #{billState}, billzip = #{billZip}, billcountry = #{billCountry}
                WHERE orderid = #{orderId}
    </update>
    
    <delete id="deleteOrder">
         DELETE orders, orderstatus FROM orders JOIN orderstatus ON orders.orderid = orderstatus.orderid
            WHERE orders.orderid = #{orderId}
    </delete>

    <insert id="insertOrderState">
        INSERT INTO orderstatus (orderid, linenum, timestamp, status)
            VALUES (#{orderid}, #{lineNum}, #{timeStamp}, #{status})
    </insert>

    <update id="updateOrderState">
        UPDATE orderstatus SET status = #{state}
            WHERE orderid = #{orderId}
    </update>

    <select id="getAllOrders" resultType="Order">
                SELECT orders.orderid AS orderId, orders.userid AS username, orderdate AS  orderDate, shipaddr1 AS shipAddress1, shipaddr2 AS shipAddress2, shipcity AS shipCity,
            billaddr1 AS billAddress1, billaddr2 AS billAddress2, billcity AS billCity, totalprice AS totalPrice, status
                FROM orders JOIN orderstatus on orders.orderid=orderstatus.orderid
    </select>

    <select id="getOrdersByOrderId" resultType="Order">
            SELECT orders.orderid AS orderId, orders.userid AS username, orderdate AS  orderDate, shipaddr1 AS shipAddress1, shipaddr2 AS shipAddress2, shipcity AS shipCity,
                billaddr1 AS billAddress1, billaddr2 AS billAddress2, billcity AS billCity, totalprice AS totalPrice, status
                    FROM orders JOIN orderstatus on orders.orderid=orderstatus.orderid
                        WHERE orders.orderid = #{orderId}
    </select>

    <select id="getOrderByKeyword" resultType="Order">
        SELECT orders.orderid AS orderId, orders.userid AS username, orderdate AS  orderDate, shipaddr1 AS shipAddress1, shipaddr2 AS shipAddress2, shipcity AS shipCity,
                billaddr1 AS billAddress1, billaddr2 AS billAddress2, billcity AS billCity, totalprice AS totalPrice, status
                    FROM orders JOIN orderstatus on orders.orderid=orderstatus.orderid
                        WHERE orders.orderid LIKE #{keyword} OR  orders.userid LIKE #{keyword}
    </select>

</mapper>